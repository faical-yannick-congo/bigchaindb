---
"$schema": "http://json-schema.org/draft-04/schema#"
id: "http://www.bigchaindb.com/schema/transaction.json"
type: object
additionalProperties: false
title: Transaction Schema
description: |
    A transaction represents the creation or transfer of assets in BigchainDB.
required:
- id
- inputs
- outputs
- operation
- metadata
- asset
- version
properties:
  id:
    "$ref": "#/definitions/sha3_hexdigest"
    description: |
        A sha3 digest of the transaction. The ID is calculated by removing all
        derived hashes and signatures from the transaction, serializing it to
        JSON with keys in sorted order and then hashing the resulting string
        with sha3.
  operation:
    "$ref": "#/definitions/operation"
  asset:
    "$ref": "#/definitions/asset"
    description: |
      Description of the asset being transacted.

      See: `Asset`_.
  inputs:
    type: array
    title: "Transaction inputs"
    description: |
        Array of the inputs of a transaction.

        See: Input_.
    items:
      "$ref": "#/definitions/input"
  outputs:
    type: array
    description: |
        Array of outputs provided by this transaction.

        See: Output_.
    items:
      "$ref": "#/definitions/output"
  metadata:
    "$ref": "#/definitions/metadata"
    description: |
      User provided transaction metadata. This field may be ``null`` or may
      contain an id and an object with freeform metadata.

      See: `Metadata`_.
  version:
    type: integer
    minimum: 1
    maximum: 1
    description: |
        BigchainDB transaction schema version.
definitions:
  offset:
    type: integer
    minimum: 0
  base58:
    pattern: "[1-9a-zA-Z^OIl]{43,44}"
    type: string
  public_keys:
    anyOf:
    - type: array
      items:
        "$ref": "#/definitions/base58"
    - type: 'null'
  sha3_hexdigest:
    pattern: "[0-9a-f]{64}"
    type: string
  uuid4:
    pattern: "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"
    type: string
    description: |
        A `UUID <https://tools.ietf.org/html/rfc4122.html>`_
        of type 4 (random).
  operation:
    type: string
    description: |
        Type of the transaction:

        A ``CREATE`` transaction creates an asset in BigchainDB. This
        transaction has outputs (conditions) but no inputs (fulfillments),
        so a dummy fulfillment is used.

        A ``TRANSFER`` transaction transfers ownership of an asset, by providing
        fulfillments to conditions of earlier transactions.

        A ``GENESIS`` transaction is a special case transaction used as the
        sole member of the first block in a BigchainDB ledger.
    enum:
    - CREATE
    - TRANSFER
    - GENESIS
  asset:
    type: object
    description: |
        Description of the asset being transacted. In the case of a ``TRANSFER``
        transaction, this field contains only the ID of asset. In the case
        of a ``CREATE`` transaction, this field may contain properties:
    additionalProperties: false
    required:
    - id
    properties:
      id:
        "$ref": "#/definitions/uuid4"
      divisible:
        type: boolean
        description: |
            Whether or not the asset has a quantity that may be partially spent.
      updatable:
        type: boolean
        description: |
            Whether or not the description of the asset may be updated. Defaults to false.
      refillable:
        type: boolean
        description: |
          Whether the amount of the asset can change after its creation. Defaults to false.
      data:
        description: |
          User provided metadata associated with the asset. May also be ``null``.
        anyOf:
        - type: object
          additionalProperties: true
        - type: 'null'
  output:
    type: object
    description: |
        A transaction output. Describes a quantity of an asset and a locking
        script to spend the output.

        See also: Input_.
    additionalProperties: false
    required:
    - amount
    - language
    - condition
    - public_keys
    properties:
      amount:
        type: integer
        description: |
            Integral amount of the asset represented by this condition.
            In the case of a non divisible asset, this will always be 1.
      language:
        type: string
      condition:
        description: |
            Describes the condition that needs to be met to spend the output. Has the properties: 

            - **details**: Details of the condition.
            - **uri**: Condition encoded as an ASCII string.
        type: object
        additionalProperties: false
        required:
        - details
        - uri
        properties:
          details:
            type: object
            additionalProperties: true
          uri:
            type: string
            pattern: "^cc:([1-9a-f][0-9a-f]{0,3}|0):[1-9a-f][0-9a-f]{0,15}:[a-zA-Z0-9_-]{0,86}:([1-9][0-9]{0,17}|0)$"
      public_keys:
        "$ref": "#/definitions/public_keys"
        description: |
            List of public keys associated with asset control.
  input:
    type: "object"
    description:
      An input spends a previous output, by providing a fulfillment to the output's
      condition.
    additionalProperties: false
    required:
    - fulfillment
    properties:
      owners_before:
        "$ref": "#/definitions/owners_list"
        description: |
            List of public keys of the previous owners of the asset.
      fulfillment:
        anyOf:
        - type: object
          additionalProperties: false
          properties:
            bitmask:
              type: integer
            public_key:
              type: string
            type:
              type: string
            signature:
              anyOf:
              - type: string
              - type: 'null'
            type_id:
              type: integer
          description: |
              Fulfillment of a condition_, or put a different way, this is a
              payload that satisfies a condition in order to spend the associated
              asset.
        - type: string
          pattern: "^cf:([1-9a-f][0-9a-f]{0,3}|0):[a-zA-Z0-9_-]*$"
      spends:
        type: 'object'
        description: |
          Reference to the output that is being spent.
        additionalProperties: false
        required:
        - idx
        - txid
        properties:
          idx:
            "$ref": "#definitions/offset"
          txid:
            "$ref": "#definitions/sha3_hexdigest"
  metadata:
    anyOf:
    - type: object
      description: |
        User provided transaction metadata. This field may be ``null`` or may
        contain an non empty object with freeform metadata.
      additionalProperties: true
      minProperties: 1
    - type: 'null'
